load("@rules_rust//rust:defs.bzl", "rust_shared_library", "rust_test")
load("@crates//:defs.bzl", "aliases", "all_crate_deps")
load("@rules_python//python:py_binary.bzl", "py_binary")

rust_shared_library(
    name = "cel2db_py",
    srcs = glob(["src/**/*.rs"]),
    deps = all_crate_deps(
        normal = True,
    # local dependencies must be added, for some reason.
    ) + [
        "//cel2db:cel2db",
    ],
    proc_macro_deps = all_crate_deps(
        proc_macro = True,
    ),
)


py_binary(
  name = "example",
  srcs = ["example.py"],
  data = [
      ":cel2db_py",
  ]
)




rust_test(
    name = "unit_test",
    crate = ":lib",
    aliases = aliases(
        normal_dev = True,
        proc_macro_dev = True,
    ),
    deps = all_crate_deps(
        normal_dev = True,
    ),
    proc_macro_deps = all_crate_deps(
        proc_macro_dev = True,
    ),
)